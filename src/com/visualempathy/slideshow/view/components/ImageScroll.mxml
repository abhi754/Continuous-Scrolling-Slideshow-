<?xml version="1.0" encoding="utf-8"?>
<!-- 
	Continuous Scrolling Slideshow Demo
	Created by Joel Hooks | joelhooks@gmail.com
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="loadGalleryXML(  )" backgroundColor="#000000" resize="onResize()" >
	<mx:Script>
		<![CDATA[
			import com.visualempathy.slideshow.model.vo.ImageVO;
			import com.visualempathy.slideshow.model.vo.AlbumVO;
			import mx.core.UIComponent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			//this is a url to a SlideShowPro gallery XML for the demo.
			//ANY xml that follows this format will function.
			private var ssp_xml_base_url:String = 'http://www.visualempathy.com/ssp_director/images.php?album=145';
			
			[Bindable] private var nav:Navigator ;
			private var album:AlbumVO;
			private var firstImage:Boolean = true;
			private var image:Image
			
			[Embed(source="assets/control_play_blue.png")]
			[Bindable]
			private var playOnImgCls:Class

			[Embed(source="assets/control_play.png")]
			[Bindable]
			private var playOffImgCls:Class

			[Embed(source="assets/control_stop_blue.png")]
			[Bindable]
			private var stopOnImgCls:Class
			
			[Embed(source="assets/control_stop.png")]
			[Bindable]
			private var stopOffImgCls:Class
            
            private function onNavItemClicked( e:Event ):void
            {
            	if( nav.slideshow )
            	{
            		stopBtnClick( )
            	}
            	changeImage( )
            }

            private function onNavItemAdvance( e:Event ):void
            {
            	changeImage( )
            }
 			
 			private function changeImage( ):void
 			{
 				if( imageContainer.numChildren > 0 )
 					imageContainer.removeChildAt( imageContainer.numChildren - 1 ); 
            	image = new Image( )
            	if( nav.slideshow )
            		nav.timer.stop();
            	image.scaleContent = true
            	image.maintainAspectRatio = true
            	image.setStyle("addedEffect", longFade )
            	image.setStyle("horizontalAlign", "middle")
            	image.source = nav.album.lgPath + nav.album.selectedImage.filename;
           		image.addEventListener(Event.COMPLETE, onImageLoaded)
				imageContainer.addChild( image );
 			}
 			
 			private function onEffectEnd():void
 			{
 				imageContainer.addChild( image );
 			}
 			
 			private function updateProgress( e:ProgressEvent ):void
 			{
 				trace( e.bytesLoaded, e.bytesTotal )
 			}
			
			private function onImageLoaded( e:Event ):void
			{
				
				image.removeEventListener(Event.COMPLETE, onImageLoaded)
				if( nav.slideshow )
					nav.timer.start();
			}
			       
            private function onNavInit( e:Event ):void
            {
            	removeEventListener( Navigator.INIT_COMPLETE, onNavInit );
            }
                        
            private function playBtnClick( ):void
            {
            	playBtn.source = new playOnImgCls( )
            	stopBtn.source = new stopOffImgCls( )
            	nav.startSlideshow();
            }
            
            private function stopBtnClick( ):void
            {
            	playBtn.source = new playOffImgCls( )
            	stopBtn.source = new stopOnImgCls( )
            	nav.stopSlideshow();  
            }
            
            private function onResize( ):void
            {
            	try
            	{
            		nav.centerX = canv.width/2;
            	}
            	catch ( e:Error )
            	{
            		
            	}
            }
            
			public function loadGalleryXML(  ):void
			{			
				var ssp_xml_base_url:String = 'http://www.visualempathy.com/ssp_director/images.php?album=145'
				var myXMLURL:URLRequest = new URLRequest(ssp_xml_base_url);
				var myLoader:URLLoader = new URLLoader(myXMLURL);
				myLoader.addEventListener("complete", galleryXmlLoaded);
				addEventListener( Navigator.INIT_COMPLETE, onNavInit );
			}
			
			private function galleryXmlLoaded(evtObj:Event):void
			{ 
				var gallery_xml:XML = XML(evtObj.currentTarget.data);
		        if( gallery_xml.album )
		        {
		        	album = new AlbumVO( )
		        	album.description = gallery_xml.album.@description
		        	album.id = gallery_xml.album.@description
		        	album.lgPath = gallery_xml.album.@lgPath
		        	album.title = gallery_xml.album.@title
		        	album.tn = gallery_xml.album.@tn
		        	album.tnPath = gallery_xml.album.@tnPath
		        	for each( var img:XML in gallery_xml.album.img )
		        	{
		        		var image:ImageVO = new ImageVO( )
		        		image.filename = img.@src
		        		album.images.addItem(image)
		        	}
		        }
		        
				nav = new Navigator( album, 10, canv.width/2, canv.width, false, 5 )
				nav.addEventListener( Navigator.NAV_ITEM_CLICKED, onNavItemClicked, false, 0, true );
				addEventListener( Thumbnail.SELECT, onNavItemAdvance, false, 0, true );
				canv.addChild( nav )	
				slideContainer.visible = true	
				nav.dispatchEvent( new Event( Navigator.NAV_ITEM_CLICKED ) );	
				stage.stage.addEventListener( KeyboardEvent.KEY_DOWN, onKeypress )
			}	
			
			private function onKeypress( e:KeyboardEvent ):void
			{
				if( ! nav.slideshow )
				{
					if( e.keyCode == Keyboard.RIGHT )
						nav.selectNext()
					if( e.keyCode == Keyboard.LEFT )
						nav.selectPrevious()	
				}
			}
			
		]]>
	</mx:Script>
	<mx:Fade duration="1000" id="longFade" />	
	<mx:Fade duration="1000" id="longFadeOut" effectEnd="onEffectEnd()"/>
    <mx:VBox id="slideContainer" visible="true" backgroundAlpha="1" backgroundColor="#000000" showEffect="longFade" addedEffect="longFade"  width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" paddingBottom="10" >
    	<mx:HBox width="100%" backgroundAlpha="1" backgroundColor="#000000" horizontalAlign="right" paddingRight="15" paddingTop="10" verticalAlign="middle">
    		<mx:Label width="100%" text="use arrow keys to navigate" styleName="slideshowControl" textAlign="left" paddingLeft="15"/>
    		<mx:LinkButton enabled="{! nav.slideshow }" click="{nav.selectPrevious()}" label="&lt;-" color="#FFFFFF" id="advance0" themeColor="#4E4E4E" styleName="thumbNav"/>
    		<mx:LinkButton enabled="{! nav.slideshow }" click="{nav.selectNext()}" label="-&gt;" color="#FFFFFF" id="advance" themeColor="#4E4E4E" styleName="thumbNav"/>
    		<mx:Label text="Slideshow: " styleName="slideshowControl"/>
    		<mx:Image toolTip="Play Slideshow" id="playBtn" height="16" width="16" buttonMode="true" source="{new playOffImgCls( )}" click="playBtnClick()"/>
    		<mx:Image toolTip="Stop Slideshow" id="stopBtn" height="16" width="16" buttonMode="true" source="{new stopOnImgCls( )}" click="stopBtnClick()"/>
    	</mx:HBox>
	    <mx:Canvas borderColor="#000000" borderThickness="2" backgroundAlpha="1" borderStyle="solid" width="100%" >
	        <mx:Canvas  backgroundAlpha="1" mask="{canv_mask}" backgroundColor="#000000"  id="canv"  width="100%" height="85" clipContent="true" />
	   		<mx:Canvas id="canv_mask" backgroundAlpha="1" x="{canv.x}" y="{canv.y}" backgroundColor="#FFFFFF" width="100%" height="{canv.height}"/>	
	    </mx:Canvas>	    
	    <mx:HBox width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
	    	<mx:Canvas id="imageContainer"  />
	    </mx:HBox>
	    
    </mx:VBox> 
</mx:Canvas>
